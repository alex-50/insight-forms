import streamlit as st
import plotly.express as px


def show_correlations(df):
    st.subheader("üîó –ö–æ—Ä—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç–æ–π DataFrame
    if df.empty:
        st.error("DataFrame –ø—É—Å—Ç–æ–π!")
        return

    st.write("–†–∞–∑–º–µ—Ä DataFrame:", df.shape)
    st.write("–ü–µ—Ä–≤—ã–µ 5 —Å—Ç—Ä–æ–∫:")
    st.write(df.head())

    numeric_cols = df.select_dtypes(include=['int64', 'float64']).columns.tolist()

    # –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    st.write(f"üìä –í—Å–µ–≥–æ —á–∏—Å–ª–æ–≤—ã—Ö —Å—Ç–æ–ª–±—Ü–æ–≤: {len(numeric_cols)}")
    if numeric_cols:
        st.write("üîç –ß–∏—Å–ª–æ–≤—ã–µ —Å—Ç–æ–ª–±—Ü—ã:", numeric_cols)

    if len(numeric_cols) < 2:
        st.warning("–ù—É–∂–Ω–æ —Ö–æ—Ç—è –±—ã 2 —á–∏—Å–ª–æ–≤—ã—Ö —Å—Ç–æ–ª–±—Ü–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–π")
        return

    st.sidebar.markdown("### –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–π")
    selected_cols = st.sidebar.multiselect(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–æ–ª–±—Ü—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–π:",
        numeric_cols,
        default=numeric_cols[:min(10, len(numeric_cols))]  # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    )

    if len(selected_cols) < 2:
        st.warning("–í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –¥–≤–∞ —á–∏—Å–ª–æ–≤—ã—Ö —Å—Ç–æ–ª–±—Ü–∞.")
        return

    # –†–∞–±–æ—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º–∏ —Å—Ç–æ–ª–±—Ü–∞–º–∏
    analysis_df = df[selected_cols].dropna()

    if len(analysis_df) == 0:
        st.error("–ü–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –¥–∞–Ω–Ω—ã—Ö –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å!")
        return

    st.write(f"üìà –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º {len(analysis_df)} —Å—Ç—Ä–æ–∫ —Å {len(selected_cols)} —Å—Ç–æ–ª–±—Ü–∞–º–∏")

    corr_matrix = analysis_df.corr()

    # –¢–µ–ø–ª–æ–≤–∞—è –∫–∞—Ä—Ç–∞
    fig_heatmap = px.imshow(
        corr_matrix,
        text_auto=".2f",
        color_continuous_scale='RdBu_r',
        zmin=-1,
        zmax=1,
        title="–¢–µ–ø–ª–æ–≤–∞—è –∫–∞—Ä—Ç–∞ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–π",
    )
    fig_heatmap.update_layout(width=800, height=600)
    st.plotly_chart(fig_heatmap, use_container_width=True)

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ—Ä–æ–≥–æ–≤
    pos_threshold = st.sidebar.slider("–ü–æ—Ä–æ–≥ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π —Å–≤—è–∑–∏", 0.0, 1.0, 0.6, 0.05)
    neg_threshold = st.sidebar.slider("–ü–æ—Ä–æ–≥ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π —Å–≤—è–∑–∏", -1.0, 0.0, -0.6, 0.05)

    # –ü–æ–∏—Å–∫ —Å–∏–ª—å–Ω—ã—Ö —Å–≤—è–∑–µ–π
    strong_pos = []
    strong_neg = []

    for i in range(len(corr_matrix.columns)):
        for j in range(i + 1, len(corr_matrix.columns)):
            val = corr_matrix.iloc[i, j]
            if val >= pos_threshold:
                strong_pos.append((corr_matrix.columns[i], corr_matrix.columns[j], val))
            elif val <= neg_threshold:
                strong_neg.append((corr_matrix.columns[i], corr_matrix.columns[j], val))

    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è scatter plot
    def create_scatter_plot(x_col, y_col, corr_val, correlation_type):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö
        plot_data = analysis_df[[x_col, y_col]].dropna()

        if len(plot_data) < 2:
            st.warning(f"–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è {x_col} vs {y_col}")
            return None

        fig = px.scatter(
            plot_data,
            x=x_col,
            y=y_col,
            title=f"{correlation_type}: {x_col} vs {y_col} (r={corr_val:.2f})",
            trendline="ols",
            template="plotly_white"
        )
        return fig

    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–≤—è–∑–µ–π
    if strong_pos:
        st.markdown(f"### ‚úÖ –°–∏–ª—å–Ω—ã–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ —Å–≤—è–∑–∏ (r ‚â• {pos_threshold})")
        for x_col, y_col, corr_val in strong_pos:
            st.write(f"**{x_col}** ‚Üî **{y_col}** (r = {corr_val:.3f})")
            fig = create_scatter_plot(x_col, y_col, corr_val, "–ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–∞—è —Å–≤—è–∑—å")
            if fig:
                st.plotly_chart(fig, use_container_width=True)
            st.markdown("---")
    else:
        st.info(f"–ù–µ—Ç —Å–∏–ª—å–Ω—ã—Ö –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–≤—è–∑–µ–π (r ‚â• {pos_threshold})")

    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö —Å–≤—è–∑–µ–π
    if strong_neg:
        st.markdown(f"### üîª –°–∏–ª—å–Ω—ã–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ —Å–≤—è–∑–∏ (r ‚â§ {neg_threshold})")
        for x_col, y_col, corr_val in strong_neg:
            st.write(f"**{x_col}** ‚Üî **{y_col}** (r = {corr_val:.3f})")
            fig = create_scatter_plot(x_col, y_col, corr_val, "–û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∞—è —Å–≤—è–∑—å")
            if fig:
                st.plotly_chart(fig, use_container_width=True)
            st.markdown("---")
    else:
        st.info(f"–ù–µ—Ç —Å–∏–ª—å–Ω—ã—Ö –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö —Å–≤—è–∑–µ–π (r ‚â§ {neg_threshold})")
